// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metadata.proto

#ifndef PROTOBUF_metadata_2eproto__INCLUDED
#define PROTOBUF_metadata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry_lite.h>
#include <google/protobuf/map_field_lite.h>
// @@protoc_insertion_point(includes)

namespace protobuf_metadata_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void InitDefaultsTimestampImpl();
void InitDefaultsTimestamp();
void InitDefaultsMetaData_AttrsEntry_DoNotUseImpl();
void InitDefaultsMetaData_AttrsEntry_DoNotUse();
void InitDefaultsMetaDataImpl();
void InitDefaultsMetaData();
inline void InitDefaults() {
  InitDefaultsTimestamp();
  InitDefaultsMetaData_AttrsEntry_DoNotUse();
  InitDefaultsMetaData();
}
}  // namespace protobuf_metadata_2eproto
namespace sensetime {
namespace spring {
namespace dataset {
namespace metadata {
class MetaData;
class MetaDataDefaultTypeInternal;
extern MetaDataDefaultTypeInternal _MetaData_default_instance_;
class MetaData_AttrsEntry_DoNotUse;
class MetaData_AttrsEntry_DoNotUseDefaultTypeInternal;
extern MetaData_AttrsEntry_DoNotUseDefaultTypeInternal _MetaData_AttrsEntry_DoNotUse_default_instance_;
class Timestamp;
class TimestampDefaultTypeInternal;
extern TimestampDefaultTypeInternal _Timestamp_default_instance_;
}  // namespace metadata
}  // namespace dataset
}  // namespace spring
}  // namespace sensetime
namespace sensetime {
namespace spring {
namespace dataset {
namespace metadata {

// ===================================================================

class Timestamp : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:sensetime.spring.dataset.metadata.Timestamp) */ {
 public:
  Timestamp();
  virtual ~Timestamp();

  Timestamp(const Timestamp& from);

  inline Timestamp& operator=(const Timestamp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Timestamp(Timestamp&& from) noexcept
    : Timestamp() {
    *this = ::std::move(from);
  }

  inline Timestamp& operator=(Timestamp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Timestamp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Timestamp* internal_default_instance() {
    return reinterpret_cast<const Timestamp*>(
               &_Timestamp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Timestamp* other);
  friend void swap(Timestamp& a, Timestamp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Timestamp* New() const PROTOBUF_FINAL { return New(NULL); }

  Timestamp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Timestamp& from);
  void MergeFrom(const Timestamp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Timestamp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 seconds = 1;
  void clear_seconds();
  static const int kSecondsFieldNumber = 1;
  ::google::protobuf::int64 seconds() const;
  void set_seconds(::google::protobuf::int64 value);

  // int32 nanos = 2;
  void clear_nanos();
  static const int kNanosFieldNumber = 2;
  ::google::protobuf::int32 nanos() const;
  void set_nanos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sensetime.spring.dataset.metadata.Timestamp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int64 seconds_;
  ::google::protobuf::int32 nanos_;
  mutable int _cached_size_;
  friend struct ::protobuf_metadata_2eproto::TableStruct;
  friend void ::protobuf_metadata_2eproto::InitDefaultsTimestampImpl();
};
// -------------------------------------------------------------------

class MetaData_AttrsEntry_DoNotUse : public ::google::protobuf::internal::MapEntryLite<MetaData_AttrsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntryLite<MetaData_AttrsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  MetaData_AttrsEntry_DoNotUse();
  MetaData_AttrsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MetaData_AttrsEntry_DoNotUse& other);
  static const MetaData_AttrsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MetaData_AttrsEntry_DoNotUse*>(&_MetaData_AttrsEntry_DoNotUse_default_instance_); }
};

// -------------------------------------------------------------------

class MetaData : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:sensetime.spring.dataset.metadata.MetaData) */ {
 public:
  MetaData();
  virtual ~MetaData();

  MetaData(const MetaData& from);

  inline MetaData& operator=(const MetaData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MetaData(MetaData&& from) noexcept
    : MetaData() {
    *this = ::std::move(from);
  }

  inline MetaData& operator=(MetaData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const MetaData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MetaData* internal_default_instance() {
    return reinterpret_cast<const MetaData*>(
               &_MetaData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(MetaData* other);
  friend void swap(MetaData& a, MetaData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MetaData* New() const PROTOBUF_FINAL { return New(NULL); }

  MetaData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const MetaData& from);
  void MergeFrom(const MetaData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetaData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> attrs = 5;
  int attrs_size() const;
  void clear_attrs();
  static const int kAttrsFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      attrs() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_attrs();

  // string etag = 2;
  void clear_etag();
  static const int kEtagFieldNumber = 2;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // string content_type = 3;
  void clear_content_type();
  static const int kContentTypeFieldNumber = 3;
  const ::std::string& content_type() const;
  void set_content_type(const ::std::string& value);
  #if LANG_CXX11
  void set_content_type(::std::string&& value);
  #endif
  void set_content_type(const char* value);
  void set_content_type(const char* value, size_t size);
  ::std::string* mutable_content_type();
  ::std::string* release_content_type();
  void set_allocated_content_type(::std::string* content_type);

  // .sensetime.spring.dataset.metadata.Timestamp creation_time = 4;
  bool has_creation_time() const;
  void clear_creation_time();
  static const int kCreationTimeFieldNumber = 4;
  const ::sensetime::spring::dataset::metadata::Timestamp& creation_time() const;
  ::sensetime::spring::dataset::metadata::Timestamp* release_creation_time();
  ::sensetime::spring::dataset::metadata::Timestamp* mutable_creation_time();
  void set_allocated_creation_time(::sensetime::spring::dataset::metadata::Timestamp* creation_time);

  // int32 size = 1;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sensetime.spring.dataset.metadata.MetaData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::MapFieldLite<
      MetaData_AttrsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > attrs_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::internal::ArenaStringPtr content_type_;
  ::sensetime::spring::dataset::metadata::Timestamp* creation_time_;
  ::google::protobuf::int32 size_;
  mutable int _cached_size_;
  friend struct ::protobuf_metadata_2eproto::TableStruct;
  friend void ::protobuf_metadata_2eproto::InitDefaultsMetaDataImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Timestamp

// int64 seconds = 1;
inline void Timestamp::clear_seconds() {
  seconds_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Timestamp::seconds() const {
  // @@protoc_insertion_point(field_get:sensetime.spring.dataset.metadata.Timestamp.seconds)
  return seconds_;
}
inline void Timestamp::set_seconds(::google::protobuf::int64 value) {
  
  seconds_ = value;
  // @@protoc_insertion_point(field_set:sensetime.spring.dataset.metadata.Timestamp.seconds)
}

// int32 nanos = 2;
inline void Timestamp::clear_nanos() {
  nanos_ = 0;
}
inline ::google::protobuf::int32 Timestamp::nanos() const {
  // @@protoc_insertion_point(field_get:sensetime.spring.dataset.metadata.Timestamp.nanos)
  return nanos_;
}
inline void Timestamp::set_nanos(::google::protobuf::int32 value) {
  
  nanos_ = value;
  // @@protoc_insertion_point(field_set:sensetime.spring.dataset.metadata.Timestamp.nanos)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MetaData

// int32 size = 1;
inline void MetaData::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 MetaData::size() const {
  // @@protoc_insertion_point(field_get:sensetime.spring.dataset.metadata.MetaData.size)
  return size_;
}
inline void MetaData::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:sensetime.spring.dataset.metadata.MetaData.size)
}

// string etag = 2;
inline void MetaData::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MetaData::etag() const {
  // @@protoc_insertion_point(field_get:sensetime.spring.dataset.metadata.MetaData.etag)
  return etag_.GetNoArena();
}
inline void MetaData::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sensetime.spring.dataset.metadata.MetaData.etag)
}
#if LANG_CXX11
inline void MetaData::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sensetime.spring.dataset.metadata.MetaData.etag)
}
#endif
inline void MetaData::set_etag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sensetime.spring.dataset.metadata.MetaData.etag)
}
inline void MetaData::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sensetime.spring.dataset.metadata.MetaData.etag)
}
inline ::std::string* MetaData::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:sensetime.spring.dataset.metadata.MetaData.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetaData::release_etag() {
  // @@protoc_insertion_point(field_release:sensetime.spring.dataset.metadata.MetaData.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetaData::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:sensetime.spring.dataset.metadata.MetaData.etag)
}

// string content_type = 3;
inline void MetaData::clear_content_type() {
  content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MetaData::content_type() const {
  // @@protoc_insertion_point(field_get:sensetime.spring.dataset.metadata.MetaData.content_type)
  return content_type_.GetNoArena();
}
inline void MetaData::set_content_type(const ::std::string& value) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sensetime.spring.dataset.metadata.MetaData.content_type)
}
#if LANG_CXX11
inline void MetaData::set_content_type(::std::string&& value) {
  
  content_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sensetime.spring.dataset.metadata.MetaData.content_type)
}
#endif
inline void MetaData::set_content_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sensetime.spring.dataset.metadata.MetaData.content_type)
}
inline void MetaData::set_content_type(const char* value, size_t size) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sensetime.spring.dataset.metadata.MetaData.content_type)
}
inline ::std::string* MetaData::mutable_content_type() {
  
  // @@protoc_insertion_point(field_mutable:sensetime.spring.dataset.metadata.MetaData.content_type)
  return content_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetaData::release_content_type() {
  // @@protoc_insertion_point(field_release:sensetime.spring.dataset.metadata.MetaData.content_type)
  
  return content_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetaData::set_allocated_content_type(::std::string* content_type) {
  if (content_type != NULL) {
    
  } else {
    
  }
  content_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_type);
  // @@protoc_insertion_point(field_set_allocated:sensetime.spring.dataset.metadata.MetaData.content_type)
}

// .sensetime.spring.dataset.metadata.Timestamp creation_time = 4;
inline bool MetaData::has_creation_time() const {
  return this != internal_default_instance() && creation_time_ != NULL;
}
inline void MetaData::clear_creation_time() {
  if (GetArenaNoVirtual() == NULL && creation_time_ != NULL) {
    delete creation_time_;
  }
  creation_time_ = NULL;
}
inline const ::sensetime::spring::dataset::metadata::Timestamp& MetaData::creation_time() const {
  const ::sensetime::spring::dataset::metadata::Timestamp* p = creation_time_;
  // @@protoc_insertion_point(field_get:sensetime.spring.dataset.metadata.MetaData.creation_time)
  return p != NULL ? *p : *reinterpret_cast<const ::sensetime::spring::dataset::metadata::Timestamp*>(
      &::sensetime::spring::dataset::metadata::_Timestamp_default_instance_);
}
inline ::sensetime::spring::dataset::metadata::Timestamp* MetaData::release_creation_time() {
  // @@protoc_insertion_point(field_release:sensetime.spring.dataset.metadata.MetaData.creation_time)
  
  ::sensetime::spring::dataset::metadata::Timestamp* temp = creation_time_;
  creation_time_ = NULL;
  return temp;
}
inline ::sensetime::spring::dataset::metadata::Timestamp* MetaData::mutable_creation_time() {
  
  if (creation_time_ == NULL) {
    creation_time_ = new ::sensetime::spring::dataset::metadata::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:sensetime.spring.dataset.metadata.MetaData.creation_time)
  return creation_time_;
}
inline void MetaData::set_allocated_creation_time(::sensetime::spring::dataset::metadata::Timestamp* creation_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete creation_time_;
  }
  if (creation_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      creation_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, creation_time, submessage_arena);
    }
    
  } else {
    
  }
  creation_time_ = creation_time;
  // @@protoc_insertion_point(field_set_allocated:sensetime.spring.dataset.metadata.MetaData.creation_time)
}

// map<string, string> attrs = 5;
inline int MetaData::attrs_size() const {
  return attrs_.size();
}
inline void MetaData::clear_attrs() {
  attrs_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
MetaData::attrs() const {
  // @@protoc_insertion_point(field_map:sensetime.spring.dataset.metadata.MetaData.attrs)
  return attrs_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
MetaData::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_map:sensetime.spring.dataset.metadata.MetaData.attrs)
  return attrs_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace metadata
}  // namespace dataset
}  // namespace spring
}  // namespace sensetime

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_metadata_2eproto__INCLUDED
